---

- stat:
    path: "{{ certificate_root_dir }}/vault/{{ inventory_hostname }}/cli.pem.enc"
  register: "cli_pem_enc"
- stat:
    path: "{{ certificate_root_dir }}/vault/{{ inventory_hostname }}/cli-key.pem.enc"
  register: "cli_key_pem_enc"
- stat:
    path: "{{ certificate_root_dir }}/vault/{{ inventory_hostname }}/cli.csr.enc"
  register: "cli_csr_enc"    
- block:
  - name : "removing leftover vault cli 'cli.pem.enc'"
    file: 
      path: "{{ certificate_root_dir }}/vault/{{ inventory_hostname }}/cli.pem.enc"
      state: absent
    when:
      - cli_pem_enc.stat.exists
  - name : "removing leftover vault cli 'cli-key.pem.enc'"
    file: 
      path: "{{ certificate_root_dir }}/vault/{{ inventory_hostname }}/cli-key.pem.enc"
      state: absent
    when:
      - cli_key_pem_enc.stat.exists
  - name : "removing leftover vault cli 'cli.csr.enc'"
    file: 
      path: "{{ certificate_root_dir }}/vault/{{ inventory_hostname }}/cli.csr.enc"
      state: absent
    when:
      - cli_csr_enc.stat.exists
  - name: "Generating vault cli certificates for '{{ inventory_hostname }}'"
    shell: "echo '{}' | sudo cfssl gencert -ca={{ certificate_root_dir }}/vault/{{ inventory_hostname }}/ca.pem -ca-key={{ certificate_root_dir }}/vault/{{ inventory_hostname }}/ca-key.pem --profile=client - | cfssljson -bare cli"
    args:
      chdir: "{{ certificate_root_dir }}/vault/{{ inventory_hostname }}"
  when: >
    ca_pem_enc.stat.exists == False or
    ca_key_pem_enc.stat.exists == False or
    ca_csr_enc.stat.exists == False
