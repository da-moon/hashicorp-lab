#!/usr/bin/env bash
VAULT_SERVER_NAME="$(lxc list --format json | jq -r '.[] | select((.name | contains ("vault")) and (.status=="Running")).name' | head -n 1)"
VAULT_IP="$(lxc list --format json | jq -r '.[] | select((.name | contains ("vault")) and (.status=="Running")).state.network.eth0.addresses|.[] | select(.family=="inet").address' | head -n 1)"
export VAULT_ADDR="https://$VAULT_IP:8200"
[ -r playbooks/vault/host_vars/vault_root_token.yml ] && export VAULT_TOKEN="$(cat playbooks/vault/host_vars/vault_root_token.yml | yq -r '.vault_root_token' | ansible-vault decrypt --vault-password-file=~/.vault_pass.txt)"
rm -r /tmp/vault
mkdir -p /tmp/vault
ansible-vault decrypt --vault-password-file=~/.vault_pass.txt --output=/tmp/vault/ca.pem  "playbooks/vault/host_vars/certificates/vault/$VAULT_SERVER_NAME/ca.pem.enc"
ansible-vault decrypt --vault-password-file=~/.vault_pass.txt --output=/tmp/vault/client-key.pem  "playbooks/vault/host_vars/certificates/vault/$VAULT_SERVER_NAME/client-key.pem.enc"
ansible-vault decrypt --vault-password-file=~/.vault_pass.txt --output=/tmp/vault/client.pem  "playbooks/vault/host_vars/certificates/vault/$VAULT_SERVER_NAME/client.pem.enc"
export VAULT_CACERT='/tmp/vault/ca.pem'
export VAULT_CLIENT_KEY='/tmp/vault/client-key.pem'
export VAULT_CLIENT_CERT='/tmp/vault/client.pem'
# while [ -z "${VAULT_TOKEN+x}" ] ; do
#   printf "\n‚ùó The VAULT_TOKEN environment variable is required. Please enter its value.\n" &&
#   read -s -p "VAULT_TOKEN: " VAULT_TOKEN ;
# done ; export VAULT_TOKEN="$VAULT_TOKEN" && printf "\n'VAULT_TOKEN' environment variable was set successfully\n";